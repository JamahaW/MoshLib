.TH "mosh::hardware::LineSensor" 3 "MoshLib" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mosh::hardware::LineSensor \- Аналоговый датчик линии  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <linesensor\&.hpp>\fP
.SS "Открытые члены"

.in +1c
.ti -1c
.RI "\fBLineSensor\fP (uint8_t pin, uint16_t on_line, uint16_t on_field)"
.br
.RI "Аналоговый датчик линии "
.ti -1c
.RI "int16_t \fBreadRaw\fP () const"
.br
.RI "Считать значение с АЦП "
.ti -1c
.RI "int8_t \fBread\fP () const"
.br
.RI "определить на сколько (%) датчик находится на линии "
.ti -1c
.RI "int8_t \fBoperator()\fP () const"
.br
.RI "Оператор Функтора для сокращения "
.ti -1c
.RI "bool \fBon\fP () const"
.br
.RI "Проверить логическое наличие линии "
.in -1c
.SH "Подробное описание"
.PP 
Аналоговый датчик линии 
.SH "Конструктор(ы)"
.PP 
.SS "LineSensor::LineSensor (uint8_t pin, uint16_t on_line, uint16_t on_field)"

.PP
Аналоговый датчик линии 
.PP
\fBАргументы\fP
.RS 4
\fIpin\fP Аналоговый Пин датчика (A0-A7) 
.br
\fIon_line\fP Значение АЦП с пина датчика на линии 
.br
\fIon_field\fP Значение АЦП с пина датчика на поле 
.RE
.PP
.PP
.nf
7     : PIN(pin), ON_LINE(on_line), ON_FIELD(on_field) {
8     pinMode(PIN, INPUT);
9 }
.fi

.SH "Методы"
.PP 
.SS "bool LineSensor::on () const"

.PP
Проверить логическое наличие линии 
.PP
\fBВозвращает\fP
.RS 4
(%) линии больше \fRGRAY_PERCENT\fP 
.RE
.PP
.PP
.nf
20 { return read() > GRAY_PERCENT; }
.fi

.SS "int8_t LineSensor::operator() () const"

.PP
Оператор Функтора для сокращения 
.PP
\fBВозвращает\fP
.RS 4
Процент нахождения датчика на линии 
.RE
.PP
.PP
.nf
18 { return read(); }
.fi

.SS "int8_t LineSensor::read () const"

.PP
определить на сколько (%) датчик находится на линии 
.PP
\fBВозвращает\fP
.RS 4
уровень нахождения датчика на линии (0 \&.\&. 100) 
.RE
.PP
.PP
.nf
13                               {
14     int16_t ret = map(readRaw(), ON_LINE, ON_FIELD, 100, 0);
15     return (int8_t) constrain(ret, 0, 100);
16 }
.fi

.SS "int16_t LineSensor::readRaw () const"

.PP
Считать значение с АЦП 
.PP
\fBВозвращает\fP
.RS 4
уровень сигнала 0 - 1024 
.RE
.PP
.PP
.nf
11 { return analogRead(PIN); }
.fi


.SH "Автор"
.PP 
Автоматически создано Doxygen для MoshLib из исходного текста\&.
